<h1>How Waterpal Works</h1>
<!DOCTYPE html>
<!-- saved from url=(0046)file:///C:/Users/jim/Desktop/website/Bill.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Your Water Bill</title>
    <link href="file:///C:/Users/jim/Desktop/website/main3.css" rel="stylesheet">
    <meta charset="utf-8">
<style>

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  width: 960px;
  height: 500px;
  position: relative;
}

svg {
  width: 100%;
  height: 100%;
}

path.slice{
  stroke-width:2px;
}

polyline{
  opacity: .3;
  stroke: black;
  stroke-width: 2px;
  fill: none;
}

</style>
</head>
<body>
    <img src="./Your Water Bill_files/image4.jpg" height="42" width="42" style="float: left;padding: 20px;">
   <h3 style="color: skyblue; padding: 10px;float: left">Los Angeles Department of Water &amp; Power</h3>
   <div style="float: right;">
   <h3>Quan Cui</h3>
   <p>Los Angeles, CA</p></div>
   <br>   <br>   <br>  <br><br>
   <hr>
   <div class="row1">
    <h4>Definition</h4>
    <p>HCT- Hundred Cubic Feet is the unit to calculate the water charges. One HCF equals 748 gallons
</p>
   </div>
    <br><br>
   <div class="row1">
    <h4>Water Usage Analysis</h4>
    <p>The current calculation model of your water charge: Try it (set up estimation for next month)
</p>
   </div>
   <div style="float:right;width: 30%;"><button class="randomize">randomize</button>
   <script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var svg = d3.select("body")
  .append("svg")
  .append("g")

svg.append("g")
  .attr("class", "slices");
svg.append("g")
  .attr("class", "labels");
svg.append("g")
  .attr("class", "lines");

var width = 960,
    height = 450,
  radius = Math.min(width, height) / 2;

var pie = d3.layout.pie()
  .sort(null)
  .value(function(d) {
    return d.value;
  });

var arc = d3.svg.arc()
  .outerRadius(radius * 0.8)
  .innerRadius(radius * 0.4);

var outerArc = d3.svg.arc()
  .innerRadius(radius * 0.9)
  .outerRadius(radius * 0.9);

svg.attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

var key = function(d){ return d.data.label; };

var color = d3.scale.ordinal()
  .domain(["Toilet", "Shower", "Lawn", "Kitchen", "Leaks"])
  .range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

function randomData (){
  var labels = color.domain();
  return labels.map(function(label){
    return { label: label, value: Math.random() }
  });
}

change(randomData());

d3.select(".randomize")
  .on("click", function(){
    change(randomData());
  });


function change(data) {

  /* ------- PIE SLICES -------*/
  var slice = svg.select(".slices").selectAll("path.slice")
    .data(pie(data), key);

  slice.enter()
    .insert("path")
    .style("fill", function(d) { return color(d.data.label); })
    .attr("class", "slice");

  slice   
    .transition().duration(1000)
    .attrTween("d", function(d) {
      this._current = this._current || d;
      var interpolate = d3.interpolate(this._current, d);
      this._current = interpolate(0);
      return function(t) {
        return arc(interpolate(t));
      };
    })

  slice.exit()
    .remove();

  /* ------- TEXT LABELS -------*/

  var text = svg.select(".labels").selectAll("text")
    .data(pie(data), key);

  text.enter()
    .append("text")
    .attr("dy", ".35em")
    .text(function(d) {
      return d.data.label;
    });
  
  function midAngle(d){
    return d.startAngle + (d.endAngle - d.startAngle)/2;
  }

  text.transition().duration(1000)
    .attrTween("transform", function(d) {
      this._current = this._current || d;
      var interpolate = d3.interpolate(this._current, d);
      this._current = interpolate(0);
      return function(t) {
        var d2 = interpolate(t);
        var pos = outerArc.centroid(d2);
        pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);
        return "translate("+ pos +")";
      };
    })
    .styleTween("text-anchor", function(d){
      this._current = this._current || d;
      var interpolate = d3.interpolate(this._current, d);
      this._current = interpolate(0);
      return function(t) {
        var d2 = interpolate(t);
        return midAngle(d2) < Math.PI ? "start":"end";
      };
    });

  text.exit()
    .remove();

  /* ------- SLICE TO TEXT POLYLINES -------*/

  var polyline = svg.select(".lines").selectAll("polyline")
    .data(pie(data), key);
  
  polyline.enter()
    .append("polyline");

  polyline.transition().duration(1000)
    .attrTween("points", function(d){
      this._current = this._current || d;
      var interpolate = d3.interpolate(this._current, d);
      this._current = interpolate(0);
      return function(t) {
        var d2 = interpolate(t);
        var pos = outerArc.centroid(d2);
        pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);
        return [arc.centroid(d2), outerArc.centroid(d2), pos];
      };      
    });
  
  polyline.exit()
    .remove();
};

</script>
   </div><svg><g transform="translate(480,225)"><g class="slices"><path class="slice" d="M1.1021821192326179e-14,-180A180,180 0 0,1 130.64975997762951,-123.81696256082122L65.32487998881476,-61.90848128041061A90,90 0 0,0 5.5109105961630896e-15,-90Z" style="fill: rgb(152, 171, 197);"></path><path class="slice" d="M130.64975997762951,-123.81696256082122A180,180 0 0,1 175.6000022967971,-39.555520390520066L87.80000114839855,-19.777760195260033A90,90 0 0,0 65.32487998881476,-61.90848128041061Z" style="fill: rgb(138, 137, 166);"></path><path class="slice" d="M175.6000022967971,-39.555520390520066A180,180 0 0,1 -87.15286116814534,157.49405953941877L-43.57643058407267,78.74702976970939A90,90 0 0,0 87.80000114839855,-19.777760195260033Z" style="fill: rgb(123, 104, 136);"></path><path class="slice" d="M-87.15286116814534,157.49405953941877A180,180 0 0,1 -179.98021940867866,2.6684492882368853L-89.99010970433933,1.3342246441184427A90,90 0 0,0 -43.57643058407267,78.74702976970939Z" style="fill: rgb(107, 72, 107);"></path><path class="slice" d="M-179.98021940867866,2.6684492882368853A180,180 0 0,1 -3.3065463576978534e-14,-180L-1.6532731788489267e-14,-90A90,90 0 0,0 -89.99010970433933,1.3342246441184427Z" style="fill: rgb(160, 93, 86);"></path></g><g class="labels"><text dy=".35em" transform="translate(225,-186.02862922597032)" style="text-anchor: start;">Toilet</text><text dy=".35em" transform="translate(225,-95.31195676257676)" style="text-anchor: start;">Shower</text><text dy=".35em" transform="translate(225,162.00445919214692)" style="text-anchor: start;">Lawn</text><text dy=".35em" transform="translate(-225,104.12929090466055)" style="text-anchor: end;">Kitchen</text><text dy=".35em" transform="translate(-225,-142.12379092981507)" style="text-anchor: end;">Leaks</text></g><g class="lines"><polyline points="53.33166292511819,-124.01908615064688,79.99749438767728,-186.02862922597032,213.75,-186.02862922597032"></polyline><polyline points="119.11130349959551,-63.541304508384506,178.66695524939325,-95.31195676257676,213.75,-95.31195676257676"></polyline><polyline points="80.99603612210497,108.00297279476462,121.49405418315744,162.00445919214692,213.75,162.00445919214692"></polyline><polyline points="-115.78397658415929,69.41952726977371,-173.67596487623894,104.12929090466055,-213.75,104.12929090466055"></polyline><polyline points="-96.16439177375888,-94.74919395321004,-144.2465876606383,-142.12379092981507,-213.75,-142.12379092981507"></polyline></g></g></svg>
  
   <br><br>
   <div class="row1">
    <h4>Conservation Suggestion</h4>
    <p>Based on your water usage: we suggest you to decrease your irrigation consumption (details).
</p>
   </div><hr>
   <h4 style="margin-left: 20px;">References</h4>


</body></html>